/**
 * This file is sourced multiple times, with different macro expansions
 * for VH() and V().
 *
 * VH() is used to declare an ISR vector with a specified default handler
 *      implementation.
 * V() is used to simply declare an ISR vector which uses the
 *     default default handler.
 * Use V_reserved() to declare an empty entry in the ISR table.
 *
 * The sequence of these declarations is important!
 */

VH(1, Reset, Default_Reset_Handler)
V(2, NMI)
V(3, Hard_Fault)
V(4, Mem_Manage_Fault)
V(5, Bus_Fault)
V(6, Usage_Fault)
#ifndef SHORT_ISR
V(11, SVCall)
V(12, DebugMonitor)
V(14, PendableSrvReq)
V(15, SysTick)
V(16, DMA0)
V(17, DMA1)
V(18, DMA2)
V(19, DMA3)
V(20, DMA4)
V(21, DMA5)
V(22, DMA6)
V(23, DMA7)
V(24, DMA8)
V(25, DMA9)
V(26, DMA10)
V(27, DMA11)
V(28, DMA12)
V(29, DMA13)
V(30, DMA14)
V(31, DMA15)
V(32, DMA_Error)
V(33, MCM)
V(34, FTFL)
V(35, Read_Collision)
V(36, LVD_LVW)
V(37, LLW)
V(38, Watchdog)
V(40, I2C0)
V(41, I2C1)
V(42, SPI0)
V(43, SPI1)
V(44, SPI2)
V(45, CAN0_ORed_Message_buffer)
V(46, CAN0_Bus_Off)
V(47, CAN0_Error)
V(48, CAN0_Tx_Warning)
V(49, CAN0_Rx_Warning)
V(50, CAN0_Wake_Up)
V(53, CAN1_ORed_Message_buffer)
V(54, CAN1_Bus_Off)
V(55, CAN1_Error)
V(56, CAN1_Tx_Warning)
V(57, CAN1_Rx_Warning)
V(58, CAN1_Wake_Up)
V(61, UART0_RX_TX)
V(62, UART0_ERR)
V(63, UART1_RX_TX)
V(64, UART1_ERR)
V(65, UART2_RX_TX)
V(66, UART2_ERR)
V(67, UART3_RX_TX)
V(68, UART3_ERR)
V(69, UART4_RX_TX)
V(70, UART4_ERR)
V(71, UART5_RX_TX)
V(72, UART5_ERR)
V(73, ADC0)
V(74, ADC1)
V(75, CMP0)
V(76, CMP1)
V(77, CMP2)
V(78, FTM0)
V(79, FTM1)
V(80, FTM2)
V(81, CMT)
V(82, RTC)
V(84, PIT0)
V(85, PIT1)
V(86, PIT2)
V(87, PIT3)
V(88, PDB0)
V(89, USB0)
V(90, USBDCD)
V(95, I2S0)
V(96, SDHC)
V(97, DAC0)
V(98, DAC1)
V(99, TSI0)
V(100, MCG)
V(101, LPTimer)
V(103, PORTA)
V(104, PORTB)
V(105, PORTC)
V(106, PORTD)
V(107, PORTE)
#endif
